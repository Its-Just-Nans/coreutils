.ie \n(.g .ds Aq \(aq
.el .ds Aq '
.TH uu_cut 1  "uu_cut 0.0.27" 
.SH NAME
uu_cut \- Prints specified byte or field columns from each line of stdin or the input files
.SH SYNOPSIS
\fBuu_cut\fR [\fB\-b\fR|\fB\-\-bytes\fR] [\fB\-c\fR|\fB\-\-characters\fR] [\fB\-d\fR|\fB\-\-delimiter\fR] [\fB\-w \fR] [\fB\-f\fR|\fB\-\-fields\fR] [\fB\-\-complement\fR] [\fB\-s\fR|\fB\-\-only\-delimited\fR] [\fB\-z\fR|\fB\-\-zero\-terminated\fR] [\fB\-\-output\-delimiter\fR] [\fB\-h\fR|\fB\-\-help\fR] [\fB\-V\fR|\fB\-\-version\fR] [\fIfile\fR] 
.SH DESCRIPTION
Prints specified byte or field columns from each line of stdin or the input files
.SH OPTIONS
.TP
\fB\-b\fR, \fB\-\-bytes\fR=\fILIST\fR
filter byte columns from the input source
.TP
\fB\-c\fR, \fB\-\-characters\fR=\fILIST\fR
alias for character mode
.TP
\fB\-d\fR, \fB\-\-delimiter\fR=\fIDELIM\fR
specify the delimiter character that separates fields in the input source. Defaults to Tab.
.TP
\fB\-w\fR
Use any number of whitespace (Space, Tab) to separate fields in the input source (FreeBSD extension).
.TP
\fB\-f\fR, \fB\-\-fields\fR=\fILIST\fR
filter field columns from the input source
.TP
\fB\-\-complement\fR
invert the filter \- instead of displaying only the filtered columns, display all but those columns
.TP
\fB\-s\fR, \fB\-\-only\-delimited\fR
in field mode, only print lines which contain the delimiter
.TP
\fB\-z\fR, \fB\-\-zero\-terminated\fR
instead of filtering columns based on line, filter columns based on \\0 (NULL character)
.TP
\fB\-\-output\-delimiter\fR=\fINEW_DELIM\fR
in field mode, replace the delimiter in output lines with this option\*(Aqs argument
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version
.SH EXTRA
Each call must specify a mode (what to use for columns),
a sequence (which columns to print), and provide a data source

### Specifying a mode

Use \-\-bytes (\-b) or \-\-characters (\-c) to specify byte mode

Use \-\-fields (\-f) to specify field mode, where each line is broken into
fields identified by a delimiter character. For example for a typical CSV
you could use this in combination with setting comma as the delimiter

### Specifying a sequence

A sequence is a group of 1 or more numbers or inclusive ranges separated
by a commas.


cut \-f 2,5\-7 some_file.txt


will display the 2nd, 5th, 6th, and 7th field for each source line

Ranges can extend to the end of the row by excluding the second number


cut \-f 3\- some_file.txt


will display the 3rd field and all fields after for each source line

The first number of a range can be excluded, and this is effectively the
same as using 1 as the first number: it causes the range to begin at the
first column. Ranges can also display a single column


cut \-f 1,3\-5 some_file.txt


will display the 1st, 3rd, 4th, and 5th field for each source line

The \-\-complement option, when used, inverts the effect of the sequence


cut \-\-complement \-f 4\-6 some_file.txt


will display the every field but the 4th, 5th, and 6th

### Specifying a data source

If no sourcefile arguments are specified, stdin is used as the source of
lines to print

If sourcefile arguments are specified, stdin is ignored and all files are
read in consecutively if a sourcefile is not successfully read, a warning
will print to stderr, and the eventual status code will be 1, but cut
will continue to read through proceeding sourcefiles

To print columns from both STDIN and a file argument, use \- (dash) as a
sourcefile argument to represent stdin.

### Field Mode options

The fields in each line are identified by a delimiter (separator)

#### Set the delimiter

Set the delimiter which separates fields in the file using the
\-\-delimiter (\-d) option. Setting the delimiter is optional.
If not set, a default delimiter of Tab will be used.

If the \-w option is provided, fields will be separated by any number
of whitespace characters (Space and Tab). The output delimiter will
be a Tab unless explicitly specified. Only one of \-d or \-w option can be specified.
This is an extension adopted from FreeBSD.

#### Optionally Filter based on delimiter

If the \-\-only\-delimited (\-s) flag is provided, only lines which
contain the delimiter will be printed

#### Replace the delimiter

If the \-\-output\-delimiter option is provided, the argument used for
it will replace the delimiter character in each line printed. This is
useful for transforming tabular data \- e.g. to convert a CSV to a
TSV (tab\-separated file)

### Line endings

When the \-\-zero\-terminated (\-z) option is used, cut sees \\\\0 (null) as the
\*(Aqline ending\*(Aq character (both for the purposes of reading lines and
separating printed lines) instead of \\\\n (newline). This is useful for
tabular data where some of the cells may contain newlines


echo \*(Aqab\\\\0cd\*(Aq | cut \-z \-c 1


will result in \*(Aqa\\\\0c\\\\0\*(Aq
.SH VERSION
v0.0.27
