#compdef uu_chmod

autoload -U is-at-least

_uu_chmod() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'--reference=[use RFILE'\''s mode instead of MODE values]: :_files' \
'-c[like verbose but report only when a change is made]' \
'--changes[like verbose but report only when a change is made]' \
'-f[suppress most error messages]' \
'--quiet[suppress most error messages]' \
'--silent[suppress most error messages]' \
'-v[output a diagnostic for every file processed]' \
'--verbose[output a diagnostic for every file processed]' \
'--no-preserve-root[do not treat '\''/'\'' specially (the default)]' \
'--preserve-root[fail to operate recursively on '\''/'\'']' \
'-R[change files and directories recursively]' \
'--recursive[change files and directories recursively]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'::MODE:' \
'::FILE:_files' \
&& ret=0
}

(( $+functions[_uu_chmod_commands] )) ||
_uu_chmod_commands() {
    local commands; commands=()
    _describe -t commands 'uu_chmod commands' commands "$@"
}

if [ "$funcstack[1]" = "_uu_chmod" ]; then
    _uu_chmod "$@"
else
    compdef _uu_chmod uu_chmod
fi
